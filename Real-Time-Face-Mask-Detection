import cv2
from keras.models import load_model
import numpy as np

model = load_model('mask_model.h5')  # pre-trained mask classifier (binary)
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + "haarcascade_frontalface_default.xml")

cap = cv2.VideoCapture(0)

while True:
    ret, frame = cap.read()
    faces = face_cascade.detectMultiScale(frame, 1.1, 4)
    
    for (x, y, w, h) in faces:
        face = frame[y:y+h, x:x+w]
        resized = cv2.resize(face, (128, 128)) / 255.0
        reshaped = np.reshape(resized, (1, 128, 128, 3))
        result = model.predict(reshaped)
        label = "Mask" if result[0][0] < 0.5 else "No Mask"
        color = (0,255,0) if label == "Mask" else (0,0,255)
        cv2.putText(frame, label, (x, y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.8, color, 2)
        cv2.rectangle(frame, (x, y), (x+w, y+h), color, 2)
    
    cv2.imshow('Face Mask Detection', frame)
    if cv2.waitKey(1) == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
